import "url-search-params-polyfill"; // Ensure the global URLSearchParams is available

export class URLSearchParamsImpl {
  constructor(
    private readonly globalObject: object,
    private readonly constructorArgs?: [
      init?: ReadonlyArray<readonly [name: string, value: string]> | { readonly [name: string]: string } | string,
      privateData?: { readonly doNotStripQMark?: boolean | undefined },
    ],
  ) {}

  append(name: string, value: string): void {
    this.globalObject[`URLSearchParams`].append(name, value);
  }

  delete(name: string): void {
    this.globalObject[`URLSearchParams`].delete(name);
  }

  get(name: string): string | null {
    return this.globalObject[`URLSearchParams`].get(name);
  }

  getAll(name: string): string[] {
    return this.globalObject[`URLSearchParams`].getAll(name);
  }

  has(name: string): boolean {
    return this.globalObject[`URLSearchParams`].has(name);
  }

  set(name: string, value: string): void {
    this.globalObject[`URLSearchParams`].set(name, value);
  }

  sort(): void {
    // Note: The global URLSearchParams does not support sorting
    // You can add your own implementation here if needed
  }

  [Symbol.iterator](): IterableIterator<[name: string, value: string]> {
    return this.globalObject[`URLSearchParams`][Symbol.iterator]();
  }
}
