'use strict';

module.exports = exports = unpublish;

exports.usage = 'Unpublishes pre-built binary (requires aws-sdk)';

const log = require('npmlog');
const versioning = require('./util/versioning.js');
const napi = require('./util/napi.js');
const s3_setup = require('./util/s3_setup.js');
const url = require('url');
const AWS = require('aws-sdk');

async function unpublish(gyp, argv, callback) {
  if (!gyp || !gyp.package_json || !gyp.opts) {
    return callback(new Error('Missing required properties: gyp, gyp.package_json, gyp.opts'));
  }

  const package_json = gyp.package_json;
  const napi_build_version = napi.get_napi_build_version_from_command_args(argv);

  if (!napi_build_version) {
    return callback(new Error('Missing required property: napi_build_version'));
  }

  const opts = versioning.evaluate(package_json, gyp.opts, napi_build_version);

  const config = await s3_setup.detect(opts);

  if (!config.bucket || !config.prefix) {
    return callback(new Error('Missing required properties in config: bucket, prefix'));
  }

  const s3 = new AWS.S3();
  const key_name = url.resolve(config.prefix, opts.package_name);
  const s3_opts = {
    Bucket: config.bucket,
    Key: key_name
  };

  try {
    const meta = await s3.headObject(s3_opts).promise();
    log.info('unpublish', JSON.stringify(meta));

    await s3.deleteObject(s3_opts).
