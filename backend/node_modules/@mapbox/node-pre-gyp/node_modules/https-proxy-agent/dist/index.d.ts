/// <reference types="node" />

import net from 'net';
import tls from 'tls';
import { Url } from 'url';
import { AgentOptions } from 'agent-base';
import { OutgoingHttpHeaders } from 'http';
import HttpsProxyAgent from './agent';

declare function createHttpsProxyAgent(opts: string | createHttpsProxyAgent.HttpsProxyAgentOptions): HttpsProxyAgent;

declare namespace createHttpsProxyAgent {
  interface BaseHttpsProxyAgentOptions {
    headers?: OutgoingHttpHeaders;
    secureProxy?: boolean;
  }

  export interface HttpsProxyAgentOptions extends AgentOptions, BaseHttpsProxyAgentOptions, Omit<Url & net.NetConnectOpts & tls.ConnectionOptions, keyof BaseHttpsProxyAgentOptions> {}

  export type HttpsProxyAgent = InstanceType<typeof HttpsProxyAgent>;

  export const HttpsProxyAgent: typeof HttpsProxyAgent;
}

export default createHttpsProxyAgent;
