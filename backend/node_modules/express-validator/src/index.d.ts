// Instead of importing and exporting every single named export from the files,
// we can use a single `export *` statement to re-export all the named exports from
// each file. This makes the code more concise and easier to read.

// base.ts
export * from './base';

// chain.ts
export * from './chain';

// middlewares/exact.ts
export * from './middlewares/exact';

// middlewares/one-of.ts
export * from './middlewares/one-of';

// middlewares/validation-chain-builders.ts
export * from './middlewares/validation-chain-builders';

// middlewares/schema.ts
export { checkSchema, Schema, ParamSchema } from './middlewares/schema';

// matched-data.ts
export * from './matched-data';

// validation-result.ts
export * from './validation-result';

// express-validator.ts
export * from './express-validator';

// index.ts
// This file serves as a single point of entry for the module, re-exporting
// all the named exports from the other files.
export * as Location from './base/Location';
export * as Meta from './base/Meta';
export * as CustomValidator from './base/CustomValidator';
export * as CustomSanitizer from './base/CustomSanitizer';
export * as AlternativeMessageFactory from './base/AlternativeMessageFactory';
export * as FieldMessageFactory from './base/FieldMessageFactory';
export * as GroupedAlternativeMessageFactory from './base/GroupedAlternativeMessageFactory';
export * as UnknownFieldMessageFactory from './base/UnknownFieldMessageFactory';
export * as ContextRunner from './chain/ContextRunner';
export * as ValidationChain from './chain/ValidationChain';
export * as ExactMiddleware from './middlewares/exact';
export * as OneOfMiddleware from './middlewares/one-of';
export * as SchemaMiddleware from './middlewares/schema';
export * as MatchedData from './matched-data';
export * as Validation
